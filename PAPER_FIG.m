function varargout = PAPER_FIG_2(varargin)
% PAPER_FIG_2 MATLAB code for PAPER_FIG_2.fig
%      PAPER_FIG_2, by itself, creates a new PAPER_FIG_2 or raises the existing
%      singleton*.
%
%      H = PAPER_FIG_2 returns the handle to a new PAPER_FIG_2 or the handle to
%      the existing singleton*.
%
%      PAPER_FIG_2('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PAPER_FIG_2.M with the given input arguments.
%
%      PAPER_FIG_2('Property','Value',...) creates a new PAPER_FIG_2 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before PAPER_FIG_2_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to PAPER_FIG_2_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help PAPER_FIG_2

% Last Modified by GUIDE v2.5 21-Nov-2020 08:27:56

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @PAPER_FIG_2_OpeningFcn, ...
                   'gui_OutputFcn',  @PAPER_FIG_2_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before PAPER_FIG_2 is made visible.
function PAPER_FIG_2_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to PAPER_FIG_2 (see VARARGIN)
set(handles.betaValue,'Min',0,'Max',1,'Value',0.8,'SliderStep',[0.01, 0.1]);
set(handles.alphaValue,'Min',0,'Max',10,'Value',1,'SliderStep',[0.01, 0.1]);
set(handles.muValue,'Min',0,'Max',1,'Value',0.3,'SliderStep',[0.01, 0.1]);
set(handles.omegaValue,'Min',0,'Max',1,'Value',0.7,'SliderStep',[0.01, 0.1]);
set(handles.pValue,'Min',0,'Max',1,'Value',0.9,'SliderStep',[0.01, 0.1]);
set(handles.gammaValue,'Min',0,'Max',1,'Value',0.2,'SliderStep',[0.01, 0.1]);
set(handles.delayValue,'Min',0,'Max',10,'Value',7.3,'SliderStep',[0.01, 0.1]);
set(handles.lambdaValue,'Min',0,'Max',10,'Value',1,'SliderStep',[0.01, 0.1]);
set(handles.phiValue,'Min',0,'Max',1,'Value',0.46,'SliderStep',[0.01, 0.1]);
handles.beta = get(handles.betaValue,'Value');
handles.alpha = get(handles.alphaValue,'Value');
handles.mu= get(handles.muValue,'Value');
handles.omega = get(handles.omegaValue,'Value');
handles.p = get(handles.pValue,'Value');
handles.phi = get(handles.phiValue,'Value');
handles.gamma = get(handles.gammaValue,'Value');
handles.delay = get(handles.delayValue,'Value');
handles.lambda = get(handles.lambdaValue,'Value');
set(handles.S,'String',1.75);
set(handles.I,'String',1);
set(handles.R,'String',1.25);
axes(handles.graph)
Paper(0.8,1,0.2,0.9,0.3,0.46,0.7,7.3,1,[1.75,1,1.25],800)
set(handles.beta_text,'String',handles.beta);
set(handles.alpha_text,'String',handles.alpha);
set(handles.mu_text,'String',handles.mu);
set(handles.omega_text, 'String',handles.omega);
set(handles.phi_text,'String',handles.phi);
set(handles.gamma_text,'String',handles.gamma);
set(handles.p_text,'String',handles.p);
set(handles.lambda_text,'String',handles.lambda);
set(handles.delay_text,'String',handles.delay);
guidata(hObject, handles);

% Choose default command line output for PAPER_FIG_2
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes PAPER_FIG_2 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = PAPER_FIG_2_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on slider movement.
function betaValue_Callback(hObject, eventdata, handles)
% hObject    handle to betaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.beta_text,'String',beta);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function betaValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to betaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function muValue_Callback(hObject, eventdata, handles)
% hObject    handle to muValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.mu_text,'String',mu);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function muValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to muValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function phiValue_Callback(hObject, eventdata, handles)
% hObject    handle to phiValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.phi_text,'String',phi);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function phiValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to phiValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function omegaValue_Callback(hObject, eventdata, handles)
% hObject    handle to omegaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.omega_text,'String',omega);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function omegaValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to omegaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function gammaValue_Callback(hObject, eventdata, handles)
% hObject    handle to gammaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.gamma_text,'String',gamma);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function gammaValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to gammaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function pValue_Callback(hObject, eventdata, handles)
% hObject    handle to pValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.p_text,'String',p);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function pValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to pValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function lambdaValue_Callback(hObject, eventdata, handles)
% hObject    handle to lambdaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.lambda_text,'String',lambda);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function lambdaValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to lambdaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function delayValue_Callback(hObject, eventdata, handles)
% hObject    handle to delayValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.delay_text,'String',delay);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function delayValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to delayValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end



function S_Callback(hObject, eventdata, handles)
% hObject    handle to S (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'String') returns contents of S as text
%        str2double(get(hObject,'String')) returns contents of S as a double


% --- Executes during object creation, after setting all properties.
function S_CreateFcn(hObject, eventdata, handles)
% hObject    handle to S (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function I_Callback(hObject, eventdata, handles)
% hObject    handle to I (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'String') returns contents of I as text
%        str2double(get(hObject,'String')) returns contents of I as a double


% --- Executes during object creation, after setting all properties.
function I_CreateFcn(hObject, eventdata, handles)
% hObject    handle to I (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function R_Callback(hObject, eventdata, handles)
% hObject    handle to R (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% Hints: get(hObject,'String') returns contents of R as text
%        str2double(get(hObject,'String')) returns contents of R as a double


% --- Executes during object creation, after setting all properties.
function R_CreateFcn(hObject, eventdata, handles)
% hObject    handle to R (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on slider movement.
function alphaValue_Callback(hObject, eventdata, handles)
cla reset
beta = get(handles.betaValue,'Value');
alpha = get(handles.alphaValue,'Value');
mu = get(handles.muValue,'Value');
omega = get(handles.omegaValue,'Value');
phi = get(handles.phiValue,'Value');
gamma = get(handles.gammaValue,'Value');
p = get(handles.pValue,'Value');
delay = get(handles.delayValue,'Value');
lambda = get(handles.lambdaValue,'Value');
alpha = get(handles.alphaValue,'Value');
set(handles.alpha_text,'String',alpha);
s_initial = str2double(get(handles.S,'String'));
i_initial = str2double(get(handles.I,'String'));
r_initial = str2double(get(handles.R,'String'));
x0 = [s_initial, i_initial, r_initial];
axes(handles.graph)
Paper(beta,alpha,gamma,p,mu,phi,omega,delay,lambda,x0,800)
% hObject    handle to alphaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function alphaValue_CreateFcn(hObject, eventdata, handles)
% hObject    handle to alphaValue (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end
