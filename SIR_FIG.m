function varargout = SIR_FIG(varargin)
% SIR_FIG MATLAB code for SIR_FIG.fig
%      SIR_FIG, by itself, creates a new SIR_FIG or raises the existing
%      singleton*.
%
%      H = SIR_FIG returns the handle to a new SIR_FIG or the handle to
%      the existing singleton*.
%
%      SIR_FIG('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in SIR_FIG.M with the given input arguments.
%
%      SIR_FIG('Property','Value',...) creates a new SIR_FIG or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before SIR_FIG_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to SIR_FIG_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help SIR_FIG

% Last Modified by GUIDE v2.5 17-Nov-2020 08:48:26

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @SIR_FIG_OpeningFcn, ...
                   'gui_OutputFcn',  @SIR_FIG_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before SIR_FIG is made visible.
function SIR_FIG_OpeningFcn(hObject, eventdata, handles, varargin)
set(handles.bet,'Min',0,'Max',1,'Value',0.5,'SliderStep',[0.01, 0.1]);
set(handles.gam,'Min',0,'Max',1,'Value',0.25,'SliderStep',[0.01, 0.1]);
handles.bet_v = get(handles.bet,'Value');
handles.gam_v = get(handles.gam,'Value');
set(handles.s0,'String',1000);
set(handles.i0,'String',10);
set(handles.r0,'String',0);
axes(handles.plot)
SIR(0.5,0.25,[1000, 10, 0],30)
set(handles.bet_value,'String',handles.bet_v);
set(handles.gam_value,'String',handles.gam_v);
guidata(hObject, handles);
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to SIR_FIG (see VARARGIN)

% Choose default command line output for SIR_FIG
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes SIR_FIG wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = SIR_FIG_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on slider movement.
function bet_Callback(hObject, eventdata, handles)
cla reset
beta = get(handles.bet,'Value');
set(handles.bet_value,'String',beta);
gamma = get(handles.gam,'Value');
s_inicial = str2double(get(handles.s0,'String'));
i_inicial = str2double(get(handles.i0,'String'));
r_inicial = str2double(get(handles.r0,'String'));
axes(handles.plot)
SIR(beta,gamma,[s_inicial, i_inicial, r_inicial],30)
% hObject    handle to bet (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function bet_CreateFcn(hObject, eventdata, handles)
% hObject    handle to bet (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function gam_Callback(hObject, eventdata, handles)
cla reset
gamma = get(handles.gam,'Value');
beta = get(handles.bet,'Value');
set(handles.gam_value,'String',gamma);
s_inicial = str2double(get(handles.s0,'String'));
i_inicial = str2double(get(handles.i0,'String'));
r_inicial = str2double(get(handles.r0,'String'));
axes(handles.plot)
SIR(beta,gamma,[s_inicial, i_inicial, r_inicial],30)
% hObject    handle to gam (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider


% --- Executes during object creation, after setting all properties.
function gam_CreateFcn(hObject, eventdata, handles)
% hObject    handle to gam (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end



function s0_Callback(hObject, eventdata, handles)
cla reset
gamma = get(handles.gam,'Value');
beta = get(handles.bet,'Value');
s_inicial = str2double(get(handles.s0,'String'));
i_inicial = str2double(get(handles.i0,'String'));
r_inicial = str2double(get(handles.r0,'String'));
axes(handles.plot)
SIR(beta,gamma,[s_inicial, i_inicial, r_inicial],30)
% hObject    handle to s0 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of s0 as text
%        str2double(get(hObject,'String')) returns contents of s0 as a double


% --- Executes during object creation, after setting all properties.
function s0_CreateFcn(hObject, eventdata, handles)
% hObject    handle to s0 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function i0_Callback(hObject, eventdata, handles)
cla reset
gamma = get(handles.gam,'Value');
beta = get(handles.bet,'Value');
s_inicial = str2double(get(handles.s0,'String'));
i_inicial = str2double(get(handles.i0,'String'));
r_inicial = str2double(get(handles.r0,'String'));
axes(handles.plot)
SIR(beta,gamma,[s_inicial, i_inicial, r_inicial],30)
% hObject    handle to i0 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of i0 as text
%        str2double(get(hObject,'String')) returns contents of i0 as a double


% --- Executes during object creation, after setting all properties.
function i0_CreateFcn(hObject, eventdata, handles)
% hObject    handle to i0 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function r0_Callback(hObject, eventdata, handles)
cla reset
gamma = get(handles.gam,'Value');
beta = get(handles.bet,'Value');
s_inicial = str2double(get(handles.s0,'String'));
i_inicial = str2double(get(handles.i0,'String'));
r_inicial = str2double(get(handles.r0,'String'));
axes(handles.plot)
SIR(beta,gamma,[s_inicial, i_inicial, r_inicial],30)
% hObject    handle to r0 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of r0 as text
%        str2double(get(hObject,'String')) returns contents of r0 as a double


% --- Executes during object creation, after setting all properties.
function r0_CreateFcn(hObject, eventdata, handles)
% hObject    handle to r0 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in graf.
function graf_Callback(hObject, eventdata, handles)
% hObject    handle to graf (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cla reset
beta = get(handles.bet,'Value');
gamma = get(handles.gam,'Value');
s_inicial = str2double(get(handles.s0,'String'));
i_inicial = str2double(get(handles.i0,'String'));
r_inicial = str2double(get(handles.r0,'String'));
axes(handles.plot)
SIR(beta,gamma,[s_inicial, i_inicial, r_inicial],30)
